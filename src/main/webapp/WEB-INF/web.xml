<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring.xml</param-value>
    </context-param>

    <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- spring mvc servlet -->
    <!-- moya:spring mvc 前端控制器 -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <url-pattern>/</url-pattern>
        <!-- url-pattern 的三种配置方式：
       第一种：*.do ： 访问.do结尾的资源时，由 DispatcherServlet 解析
       第二种：/        ： 访问所有资源都由 DispatcherServlet 解析，对于html、css、js、image等静态资源，需要配置不让 DispatcherServlet 解析
       第三种：/*       ： 注意这种方式错误，因为使用这种配置方式，最终要转发到一个jsp页面时，仍然会由 DispatcherServlet 解析 jsp 地址，
                         不能根据jsp页面找到处理的handler，会报错。
        -->
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>
    <!-- 配置session超时时间，单位分钟 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    <jsp-config>
        <taglib>
            <taglib-uri>http://www.scu.cn/mytag</taglib-uri>
            <taglib-location>/WEB-INF/tags/mytag.tld</taglib-location>
        </taglib>
    </jsp-config>

	<!-- moya:下面仅供自己查看使用 网上的教程就是这样的，但是没有效果 -->
	<!-- <servlet>  
		<servlet-name>mrun</servlet-name>  
		<jsp-file>/WEB-INF/jsp/*.jsp</jsp-file>  
	</servlet>  
	<servlet-mapping>  
		<servlet-name>mrun</servlet-name>  
		<url-pattern>/running</url-pattern>  
	</servlet-mapping> -->
</web-app>